A persistência dos dados contidos no dataset é feita no MongoDB numa base de dados chamada scienceJobs, numa coleção chamada contracts.

Não foram feitas quaisquer alterações ao dataset base e a persistência dos dados no MongoDB foi feita com o comando 'mongoimport -d scienceJobs -c contracts --file nome_do_ficheiro --jsonArray'.


QUERIES MONGODB:
1. db.contracts.countDocuments() 
	ou 
   db.contracts.find().count()
	O dataset tinha originalmente 17943 entradas.


2. db.contracts.aggregate([ {$match: {NIPCInstituicao: 501577840}}, {$group: {_id: '$NIPCInstituicao', count: {$sum: 1}}} ])
	O dataset tinha originalmente 260 entradas relativas à Universidade do Minho

É feita uma query aggregate com um contador para cada entrada que dê match com o NIPC da Instituição, neste caso 501577840, que é o NIPC da Universidade do Minho.


3. db.contracts.aggregate([ {$group: {_id: '$AreaCNAEF'}} ]).sort({ _id: 1 })


4. db.contracts.find({ DataInicioContrato: { $regex: /......2019/ } }).count()

Para ver quantos contratos foram iniciados em cada ano, é feito uma procura e verifica-se em cada entrada se, com uma expressão regular, se o ano na data de início é o pretentido. Depois faz-se um count da lista obtida.

5. db.contracts.aggregate([ {$group: {_id: '$NIPCInstituicao', count: {$sum: 1}}} ])



EX1:
Para iniciar a API de dados basta fazer 'npm install' e 'npm start' dentro da pasta ex1/.

Na criação do modelo que abstrai um contrato optei por não definir um ID, e deixar o MongoDB criar IDs únicos para entrada. Logo quando for feito um GET /contracts/:id, o servidor irá responder com a entrada existente na coleção que terá _id == id.

A maior parte dos pedidos a que a API responde são simples queries feitas ao MongoDB com o mongoose:
GET /contracts -> find()
GET /contracts/:id: -> findOne()
POST /contracts -> create()
DELETE /contracts/:id -> deleteOne()

GET /contracts?year=YYYY -> contract.find({DataInicioContrato: {$regex: regex}})
GET /contracts?inst=AAA -> contract.find({NIPCInstituicao: inst})
GET /contracts/courses -> contract.aggregate([ {$group: {_id: '$Curso'}} ])
GET /contracts/institutions -> contract.aggregate([{$group: {_id: '$NIPCInstituicao', Instituicao: { "$first": "$NomeInstituicao"}}} ])


EX2:
Para iniciar o servidor web basta fazer 'npm install' e 'npm start' dentro da pasta ex2/.


